{"version":3,"sources":["components/Form/Form.jsx","components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Form","state","query","selectedType","handleTypeChange","event","filteredByType","value","target","todos","props","filteredTodos","setState","filter","todo","completed","filteredByQuery","title","includes","toLowerCase","addFilterTodos","handleInputChange","name","this","type","placeholder","onChange","React","Component","TodoList","selectUser","className","map","key","id","readOnly","checked","onClick","userId","BASE_URL","loadUsers","fetch","then","response","json","data","CurrentUser","user","setUser","prevProps","a","email","phone","clearUser","App","selectedUserId","todosFromServer","usersFromServer","users","length","ReactDOM","render","document","getElementById"],"mappings":"wYAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,GACPC,aAAc,IAHlB,EAMEC,iBAAmB,SAACC,GAAW,IAUzBC,EATIC,EAAUF,EAAMG,OAAhBD,MACAE,EAAU,EAAKC,MAAfD,MAEJE,EAAa,YAAOF,GAQxB,OANA,EAAKG,SAAS,CACZT,aAAcI,IAKRA,GACN,IAAK,YACHD,EAAiBK,EAAcE,QAAO,SAAAC,GAAI,OAAIA,EAAKC,aAEnD,MACF,IAAK,SACHT,EAAiBK,EAAcE,QAAO,SAAAC,GAAI,OAAKA,EAAKC,aAEpD,MACF,QACA,IAAK,MACHT,EAAiBK,EAIrB,IAAMK,EAAkBV,EAAeO,QAAO,SAACC,GAC7C,QAAmB,KAAfA,EAAKG,QAAkBH,EAAKG,QACvBH,EAAKG,MAAMC,SAAS,EAAKjB,MAAMC,MAAMiB,kBAMhD,EAAKT,MAAMU,eAAeJ,IAzC9B,EA4CEK,kBAAoB,SAAChB,GAAW,IAAD,EACLA,EAAMG,OAAtBc,EADqB,EACrBA,KAAMf,EADe,EACfA,MACNE,EAAU,EAAKC,MAAfD,MAER,EAAKG,SAAL,eACGU,EAAOf,IAGV,IAAMS,EAAkBP,EAAMI,QAAO,SAACC,GACpC,QAAmB,KAAfA,EAAKG,QAAkBH,EAAKG,QACvBH,EAAKG,MAAMC,SAASX,EAAMY,kBAOjCb,EAAc,YAAOU,GAErB,OAAQ,EAAKf,MAAME,cACrB,IAAK,YACHG,EAAiBU,EAAgBH,QAAO,SAAAC,GAAI,OAAIA,EAAKC,aAErD,MACF,IAAK,SACHT,EAAiBU,EAAgBH,QAAO,SAAAC,GAAI,OAAKA,EAAKC,aAEtD,MACF,QACA,IAAK,MACHT,EAAiBU,EAIrB,EAAKN,MAAMU,eAAed,IA9E9B,4CAiFE,WAAU,IAAD,EACyBiB,KAAKtB,MAA7BC,EADD,EACCA,MAAOC,EADR,EACQA,aAEf,OACE,8BACE,2BACEqB,KAAK,OACLC,YAAY,eACZH,KAAK,QACLf,MAAOL,EACPwB,SAAUH,KAAKF,oBAGjB,4BACEC,KAAK,eACLf,MAAOJ,EACPuB,SAAUH,KAAKnB,kBAEf,4BAAQG,MAAM,OAAd,OAGA,4BAAQA,MAAM,UAAd,UAGA,4BAAQA,MAAM,aAAd,mBAzGV,GAA0BoB,IAAMC,WCEnBC,EAAb,4MACE5B,MAAQ,CACNU,cAAe,EAAKD,MAAMD,OAF9B,EAKEW,eAAiB,SAACT,GAChB,EAAKC,SAAS,CAAED,mBANpB,4CASE,WAAU,IACAA,EAAkBY,KAAKtB,MAAvBU,cADD,EAEuBY,KAAKb,MAA3BD,EAFD,EAECA,MAAOqB,EAFR,EAEQA,WAEf,OACE,yBAAKC,UAAU,YACb,sCAEA,kBAAC,EAAD,CACEtB,MAAOA,EACPW,eAAgBG,KAAKH,iBAGvB,yBAAKW,UAAU,4BACb,wBAAIA,UAAU,kBACXpB,EAAcqB,KAAI,SAAAlB,GAAI,OACrB,wBACEmB,IAAKnB,EAAKoB,GACVH,UAAS,4CACLjB,EAAKC,UACL,4BACA,4BAEJ,+BACE,2BACES,KAAK,WACLW,UAAQ,EACRC,QAAStB,EAAKC,YAEhB,2BAAID,EAAKG,QAGX,4BACEc,UAAS,4DACLjB,EAAKC,UACL,kCACA,IACJS,KAAK,SACLa,QAAS,kBAAMP,EAAWhB,EAAKwB,UANjC,YASGxB,EAAKwB,mBAlDxB,GAA8BX,IAAMC,WCL9BW,G,MAAW,kCAQV,SAASC,EAAUF,GACxB,OAAOG,MAAM,GAAD,OAAIF,EAAJ,kBAAsBD,IAC/BI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIA,EAASE,QCNxB,IAAMC,EAAb,4MACE7C,MAAQ,CACN8C,KAAM,MAFV,uDAKE,WACExB,KAAKyB,YANT,gCASE,SAAmBC,GACbA,EAAUX,SAAWf,KAAKb,MAAM4B,QAClCf,KAAKyB,YAXX,4DAeE,4BAAAE,EAAA,sEACqBV,EAAUjB,KAAKb,MAAM4B,QAD1C,OACQS,EADR,OAGExB,KAAKX,SAAS,CAAEmC,SAHlB,gDAfF,0EAqBE,WAAU,IACAA,EAASxB,KAAKtB,MAAd8C,KAER,OAAKA,EAKH,yBAAKhB,UAAU,eACb,wBAAIA,UAAU,sBACZ,uDACqBgB,EAAKb,MAG5B,wBAAIH,UAAU,qBAAqBgB,EAAKzB,MACxC,uBAAGS,UAAU,sBAAsBgB,EAAKI,OACxC,uBAAGpB,UAAU,sBAAsBgB,EAAKK,OAExC,4BACE5B,KAAK,SACLO,UAAU,qBACVM,QAASd,KAAKb,MAAM2C,WAHtB,UAdK,kCAzBb,GAAiC1B,IAAMC,WC+DxB0B,E,4MA5DbrD,MAAQ,CACNQ,MAAO,GACP8C,eAAgB,G,EAalBzB,WAAa,SAACQ,GACZ,EAAK1B,SAAS,CACZ2C,eAAgBjB,K,EAIpBe,UAAY,WACV,EAAKzC,SAAS,CACZ2C,eAAgB,K,8FAlBpB,8BAAAL,EAAA,sEFVOT,MAAM,GAAD,OAAIF,EAAJ,WACTG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIA,EAASE,QEQ7B,cACQW,EADR,gBAEgChB,IAFhC,OAEQiB,EAFR,OAIElC,KAAKX,SAAS,CACZH,MAAO+C,EACPE,MAAOD,IANX,gD,0EAsBA,WAAU,IAAD,EACkClC,KAAKtB,MAAtCQ,EADD,EACCA,MAAO8C,EADR,EACQA,eAAgBG,EADxB,EACwBA,MAE/B,OACE,yBAAK3B,UAAU,OACb,yBAAKA,UAAU,gBACZtB,EAAMkD,QAEP,kBAAC,EAAD,CACElD,MAAOA,EACPqB,WAAYP,KAAKO,WACjBQ,OAAQiB,KAMZ,yBAAKxB,UAAU,gBACb,yBAAKA,UAAU,0BACZwB,EACC,kBAAC,EAAD,CACEjB,OAAQiB,EACRF,UAAW9B,KAAK8B,UAChBK,MAAOA,IAEP,0B,GArDE/B,IAAMC,WCHxBgC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.15bba10b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Form extends React.Component {\n  state = {\n    query: '',\n    selectedType: '',\n  }\n\n  handleTypeChange = (event) => {\n    const { value } = event.target;\n    const { todos } = this.props;\n\n    let filteredTodos = [...todos];\n\n    this.setState({\n      selectedType: value,\n    });\n\n    let filteredByType;\n\n    switch (value) {\n      case 'Completed':\n        filteredByType = filteredTodos.filter(todo => todo.completed);\n\n        break;\n      case 'Active':\n        filteredByType = filteredTodos.filter(todo => !todo.completed);\n\n        break;\n      default:\n      case 'All':\n        filteredByType = filteredTodos;\n        break;\n    }\n\n    const filteredByQuery = filteredByType.filter((todo) => {\n      if (todo.title === '' || !!todo.title) {\n        return todo.title.includes(this.state.query.toLowerCase());\n      }\n\n      return false;\n    });\n\n    this.props.addFilterTodos(filteredByQuery);\n  }\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    const { todos } = this.props;\n\n    this.setState({\n      [name]: value,\n    });\n\n    const filteredByQuery = todos.filter((todo) => {\n      if (todo.title === '' || !!todo.title) {\n        return todo.title.includes(value.toLowerCase());\n      }\n\n      return false;\n    });\n\n\n    let filteredByType = [...filteredByQuery];\n\n        switch (this.state.selectedType) {\n      case 'Completed':\n        filteredByType = filteredByQuery.filter(todo => todo.completed);\n\n        break;\n      case 'Active':\n        filteredByType = filteredByQuery.filter(todo => !todo.completed);\n\n        break;\n      default:\n      case 'All':\n        filteredByType = filteredByQuery;\n        break;\n    }\n\n    this.props.addFilterTodos(filteredByType);\n  }\n\n  render() {\n    const { query, selectedType } = this.state;\n\n    return (\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Search title\"\n          name=\"query\"\n          value={query}\n          onChange={this.handleInputChange}\n        />\n\n        <select\n          name=\"selectedType\"\n          value={selectedType}\n          onChange={this.handleTypeChange}\n        >\n          <option value=\"All\">\n            All\n          </option>\n          <option value=\"Active\">\n            Active\n          </option>\n          <option value=\"Completed\">\n            Completed\n          </option>\n        </select>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number,\n    title: PropTypes.string,\n  })).isRequired,\n  addFilterTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport { Form } from '../Form/Form';\n\nexport class TodoList extends React.Component {\n  state = {\n    filteredTodos: this.props.todos,\n  };\n\n  addFilterTodos = (filteredTodos) => {\n    this.setState({ filteredTodos });\n  }\n\n  render() {\n    const { filteredTodos } = this.state;\n    const { todos, selectUser } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <Form\n          todos={todos}\n          addFilterTodos={this.addFilterTodos}\n        />\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={`TodoList__item\n                  ${todo.completed\n                  ? 'TodoList__item--unchecked'\n                  : 'TodoList__item--checked'}`}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={todo.completed}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={`TodoList__user-button button\n                    ${todo.completed\n                    ? 'TodoList__user-button--selected'\n                    : ''}`}\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    userId: PropTypes.number,\n    completed: PropTypes.bool,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function loadTodos() {\n  return fetch(`${BASE_URL}/todos`)\n    .then(response => response.json())\n    .then(response => response.data);\n}\n\nexport function loadUsers(userId) {\n  return fetch(`${BASE_URL}/users/${userId}`)\n    .then(response => response.json())\n    .then(response => response.data);\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { loadUsers } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.setUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.setUser();\n    }\n  }\n\n  async setUser() {\n    const user = await loadUsers(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (!user) {\n      return <div />;\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${user.id}`}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear\"\n          onClick={this.props.clearUser}\n        >\n          Clear\n        </button>\n      </div>\n\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { loadTodos, loadUsers } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todosFromServer = await loadTodos();\n    const usersFromServer = await loadUsers();\n\n    this.setState({\n      todos: todosFromServer,\n      users: usersFromServer,\n    });\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId, users } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length\n          && (\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            userId={selectedUserId}\n          />\n          )\n          }\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n                users={users}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}